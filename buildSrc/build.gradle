plugins {
    id 'signing'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'org.jetbrains.dokka' version "1.4.30"
    id 'com.gradle.plugin-publish' version '0.12.0'
}

archivesBaseName = 'apkname'
group 'com.ageet.apkname'
version '0.3.3'

repositories {
    google()
    mavenCentral()
    jcenter()
}

import org.jetbrains.kotlin.config.KotlinCompilerVersion

dependencies {
    implementation gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${KotlinCompilerVersion.VERSION}"
    implementation 'com.android.tools.build:gradle:4.1.3'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.11.0.202103091610-r'
    testImplementation 'junit:junit:4.13.2'
}

dokkaJavadoc.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.kotlin.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

gradlePlugin {
    plugins {
        apkname {
            id = 'com.ageet.apkname'
            displayName = 'Gradle apkname plugin'
            description = 'Auto naming for android apk'
            implementationClass = 'com.ageet.gradle.plugin.apkname.ApkNamePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/atsushi-ageet/gradle-apkname-plugin'
    vcsUrl = 'https://github.com/atsushi-ageet/gradle-apkname-plugin'
    tags = ['android', 'apk', 'aab']
}

afterEvaluate {
    publishing {
        publications {
            pluginMaven {
                artifactId archivesBaseName
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = archivesBaseName
                    description = 'Auto naming for android apk'
                    url = 'https://github.com/atsushi-ageet/gradle-apkname-plugin'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'atsushi'
                            name = 'Atsushi Yamauchi'
                            email = 'atsushi@ageet.com'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/atsushi-ageet/gradle-apkname-plugin.git'
                        developerConnection = 'scm:git:ssh:git@github.com:atsushi-ageet/gradle-apkname-plugin.git'
                        url = 'https://github.com/atsushi-ageet/gradle-apkname-plugin/tree/master'
                    }

                    withXml {
                        Node pomNode = asNode()
                        pomNode.dependencies.'*'.findAll() {
                            it.groupId.text() == 'com.android.tools.build' && it.artifactId.text() == 'gradle'
                        }.each() {
                            it.parent().remove(it)
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "sonatype"
                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                logger.quiet("sonatype: $url")
                credentials {
                    username project.properties["sonatype.user"]
                    password project.properties["sonatype.password"]
                }
            }
            maven {
                name = 'localPluginRepository'
                url = '../local-plugin-repository'
            }
        }
    }

    signing {
        sign publishing.publications.pluginMaven
    }
}
